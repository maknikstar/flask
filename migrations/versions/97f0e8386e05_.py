"""empty message

Revision ID: 97f0e8386e05
Revises: 
Create Date: 2025-03-15 18:49:31.340362

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column
from sqlalchemy import String, Integer


# revision identifiers, used by Alembic.
revision = '97f0e8386e05'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('class_name', sa.String(length=100), nullable=False),
    sa.Column('class_parral', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    with op.batch_alter_table('classes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_classes_class_name'), ['class_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_classes_class_parral'), ['class_parral'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('status', sa.INTEGER(), nullable=False),
    sa.Column('phone', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('surname', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('tutor_id', sa.Integer(), nullable=True),
    sa.Column('paral', sa.String(length=128), nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('at_school', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_student_class_id'), ['class_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_student_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_student_paral'), ['paral'], unique=False)
        batch_op.create_index(batch_op.f('ix_student_surname'), ['surname'], unique=False)
        batch_op.create_index(batch_op.f('ix_student_tutor_id'), ['tutor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_student_uuid'), ['uuid'], unique=False)

    op.create_table('enter_exit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('enter_time', sa.DateTime(), nullable=False),
    sa.Column('exit_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    with op.batch_alter_table('enter_exit', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_enter_exit_enter_time'), ['enter_time'], unique=False)
        batch_op.create_index(batch_op.f('ix_enter_exit_exit_time'), ['exit_time'], unique=False)
        batch_op.create_index(batch_op.f('ix_enter_exit_student_id'), ['student_id'], unique=False)

    # ### end Alembic commands ###
    classes = table('classes',
                    column("class_name", String),
                    column("class_parral", Integer))
    classes_list = [{"class_name": str(num) + let, "class_parral": num} for num in range(5,12) for let in 'АБВГ']
    classes_list.insert(9, {"class_name": '6Д', "class_parral": 6})
    op.bulk_insert(classes,
       classes_list
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('enter_exit', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_enter_exit_student_id'))
        batch_op.drop_index(batch_op.f('ix_enter_exit_exit_time'))
        batch_op.drop_index(batch_op.f('ix_enter_exit_enter_time'))

    op.drop_table('enter_exit')
    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_student_uuid'))
        batch_op.drop_index(batch_op.f('ix_student_tutor_id'))
        batch_op.drop_index(batch_op.f('ix_student_surname'))
        batch_op.drop_index(batch_op.f('ix_student_paral'))
        batch_op.drop_index(batch_op.f('ix_student_name'))
        batch_op.drop_index(batch_op.f('ix_student_class_id'))

    op.drop_table('student')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    with op.batch_alter_table('classes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_classes_class_parral'))
        batch_op.drop_index(batch_op.f('ix_classes_class_name'))

    op.drop_table('classes')
    # ### end Alembic commands ###
